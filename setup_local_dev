#!/bin/bash
set -x
cd $(dirname "${BASH_SOURCE[0]}")

# Activate environment
python -m venv venv
source venv/bin/activate

python -m pip install -r requirements.txt

# Create dev settings
test ! -f essen/essen/settings/dev.py && cat << EOF > essen/essen/settings/dev.py
"""
Development Settings
"""

from .base import *

SECRET_KEY = 'this(key)is(very)secret'

DEBUG = True
ALLOWED_HOSTS = ['*']

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
		'NAME': 'local/dev_db.sqlite3',
    }
}

MEDIA_ROOT = '$(pwd)/local/media/'
STATIC_ROOT = '$(pwd)/local/static/'

THUMBNAIL_OPTIMIZE_COMMAND = {
    'png': None,
    'gif': None,
    'jpeg': '/usr/local/bin/jpegoptim {filename}'
}

# Confgure Email Backend
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = 'German House <dh-noreply@scripts.mit.edu>'
EMAIL_HOST = 'outgoing.mit.edu'
EMAIL_PORT = 25

# Debug Toolbar
INSTALLED_APPS += ['debug_toolbar']
MIDDLEWARE += ['debug_toolbar.middleware.DebugToolbarMiddleware']
INTERNAL_IPS = ['127.0.0.1']

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {name} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console':{
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    }
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
EOF

# Make local folder structure
mkdir local

# Setup Django
python essen/manage.py collectstatic
python essen/manage.py migrate

